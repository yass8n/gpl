gpl.cpp::main()
  input file(tests/t010.gpl)
  random seed(42)
  read_keypresses_from_standard_input(false)
  dump_pixels(false)
  symbol_table(true)
  print_symbol_table(true)
  graphics(false)

gpl.cpp::main() Calling yyparse()

ST
creating a new T INT CONSTANT with value 42
if the lookup results in false, insert a in symbol table after creating the symbol for it.. its type is 1
true
 ...it wasnt in the table... and its value was INT  calling evaluate int on a
 returning m_int value ->42
ST
if the lookup results in false, insert b in symbol table after creating the symbol for it.. its type is 2
true
 ...it wasnt in the table0.9999 is the value of teh double 
ST
if the lookup results in false, insert c in symbol table after creating the symbol for it.. its type is 4
true
 ...it wasnt in the table returning a + b =  from string_eval() 
ST
making a new variable in gpl.y and passing in c
false
false
 its a variable -> c
 TYPE is 4
 created an expression Node of type variable  -> c
making a new variable in gpl.y and passing in a
false
false
 its a variable -> a
 TYPE is 1
 created an expression Node of type variable  -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
making a new variable in gpl.y and passing in b
false
false
 its a variable -> b
 TYPE is 2
 created an expression Node of type variable  -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
making a new variable in gpl.y and passing in a
false
false
 its a variable -> a
 TYPE is 1
 created an expression Node of type variable  -> a
making a new variable in gpl.y and passing in b
false
false
 its a variable -> b
 TYPE is 2
 created an expression Node of type variable  -> b
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> a
 its a variable -> b
if the lookup results in false, insert d in symbol table after creating the symbol for it.. its type is 4
true
 ...it wasnt in the table in the PLUS of the string EVAL 
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> a
 its a variable -> b
here 5
 here with the double plus 
 its a variable -> b
 its a variable -> a
1  2
 here with the double plus 
 its a variable -> a
 its a variable -> b
returning variable value -> 0.9999
returning variable value -> 42
paired the int and double   .. 42 and 0.9999
returning variable value -> 42
returning variable value -> 0.9999
 in the PLUS of the string EVAL 
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> b
 returning  =  from string_eval() 
 in the PLUS of the string EVAL 
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> b
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> b
here 5
returning variable value -> 0.9999
 in the PLUS of the string EVAL 
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 its a variable -> c
 its a variable -> a
 returning  +  from string_eval() 
 in the PLUS of the string EVAL 
 its a variable -> c
 its a variable -> a
here 9
returning variable value -> 42
returning variable value -> a + b = 

gpl.cpp::main() after call to yyparse().

No errors found (parser probably worked correctly).


Printing the symbol table from main()
int a 42
double b 0.9999
string c "a + b = "
string d "a + b = 42 + 0.9999 = 42.9999"
If graphics was enabled gpl program would execute now.

gpl.cpp::main() done.
