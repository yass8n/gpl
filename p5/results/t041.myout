gpl.cpp::main()
  input file(tests/t041.gpl)
  random seed(42)
  read_keypresses_from_standard_input(false)
  dump_pixels(false)
  symbol_table(true)
  print_symbol_table(true)
  graphics(false)

gpl.cpp::main() Calling yyparse()

ST
creating a new T INT CONSTANT with value 0
creating a new T INT CONSTANT with value 1
if the lookup results in false, insert x in symbol table after creating the symbol for it.. its type is 1
 ...it wasnt in the table... and its value was INT  calling evaluate int on x
 returning m_int value ->0
ST
creating a new T INT CONSTANT with value 0
creating a new T INT CONSTANT with value 1
if the lookup results in false, insert y in symbol table after creating the symbol for it.. its type is 1
 ...it wasnt in the table... and its value was INT  calling evaluate int on y
ST
creating a new T INT CONSTANT with value 0
creating a new T INT CONSTANT with value 1
if the lookup results in false, insert w in symbol table after creating the symbol for it.. its type is 1
 ...it wasnt in the table... and its value was INT  calling evaluate int on w
 returning m_int value ->0
ST
creating a new T INT CONSTANT with value 0
creating a new T INT CONSTANT with value 1
if the lookup results in false, insert z in symbol table after creating the symbol for it.. its type is 1
 ...it wasnt in the table... and its value was INT  calling evaluate int on z

gpl.cpp::main() after call to yyparse().

No errors found (parser probably worked correctly).


Printing the symbol table from main()
int w 0
int x 0
int y 32767
int z 32767
If graphics was enabled gpl program would execute now.

gpl.cpp::main() done.
